ID: 1
Execution stack: 
v=0
(repeat (fork((Print(v);v=v-1));v=v+1) until (v == 3);(x=1;(y=2;(z=3;(w=4;Print(v*10))))))

Table of symbols:

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
v=0
(repeat (fork((Print(v);v=v-1));v=v+1) until (v == 3);(x=1;(y=2;(z=3;(w=4;Print(v*10))))))

Table of symbols:

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
(repeat (fork((Print(v);v=v-1));v=v+1) until (v == 3);(x=1;(y=2;(z=3;(w=4;Print(v*10))))))

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
(repeat (fork((Print(v);v=v-1));v=v+1) until (v == 3);(x=1;(y=2;(z=3;(w=4;Print(v*10))))))

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
repeat (fork((Print(v);v=v-1));v=v+1) until (v == 3)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
repeat (fork((Print(v);v=v-1));v=v+1) until (v == 3)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
((fork((Print(v);v=v-1));v=v+1);while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1))
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
((fork((Print(v);v=v-1));v=v+1);while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1))
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
(fork((Print(v);v=v-1));v=v+1)
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
(fork((Print(v);v=v-1));v=v+1)
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
fork((Print(v);v=v-1))
v=v+1
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
fork((Print(v);v=v-1))
v=v+1
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
v=v+1
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 10
Execution stack: 
(Print(v);v=v-1)

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
v=v+1
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 10
Execution stack: 
(Print(v);v=v-1)

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 1

Output:

File table:

Heap:

Next step:

ID: 10
Execution stack: 
Print(v)
v=v-1

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 1

Output:

File table:

Heap:

Next step:

ID: 10
Execution stack: 
Print(v)
v=v-1

Table of symbols:
v --> 0

Output:

File table:

Heap:

Next step:

ID: 1
Execution stack: 
(fork((Print(v);v=v-1));v=v+1)
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 1

Output:
0

File table:

Heap:

Next step:

ID: 10
Execution stack: 
v=v-1

Table of symbols:
v --> 0

Output:
0

File table:

Heap:

Next step:

ID: 1
Execution stack: 
(fork((Print(v);v=v-1));v=v+1)
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 1

Output:
0

File table:

Heap:

Next step:

ID: 10
Execution stack: 
v=v-1

Table of symbols:
v --> 0

Output:
0

File table:

Heap:

Next step:

ID: 1
Execution stack: 
fork((Print(v);v=v-1))
v=v+1
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 1

Output:
0

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0

File table:

Heap:

Done

ID: 1
Execution stack: 
fork((Print(v);v=v-1))
v=v+1
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 1

Output:
0

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0

File table:

Heap:

Done

ID: 1
Execution stack: 
v=v+1
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 1

Output:
0

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0

File table:

Heap:

Done

ID: 10
Execution stack: 
(Print(v);v=v-1)

Table of symbols:
v --> 1

Output:
0

File table:

Heap:

Next step:

ID: 1
Execution stack: 
v=v+1
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 1

Output:
0

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0

File table:

Heap:

Done

ID: 10
Execution stack: 
(Print(v);v=v-1)

Table of symbols:
v --> 1

Output:
0

File table:

Heap:

Next step:

ID: 1
Execution stack: 
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 2

Output:
0

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0

File table:

Heap:

Done

ID: 10
Execution stack: 
Print(v)
v=v-1

Table of symbols:
v --> 1

Output:
0

File table:

Heap:

Next step:

ID: 1
Execution stack: 
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 2

Output:
0

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0

File table:

Heap:

Done

ID: 10
Execution stack: 
Print(v)
v=v-1

Table of symbols:
v --> 1

Output:
0

File table:

Heap:

Next step:

ID: 1
Execution stack: 
(fork((Print(v);v=v-1));v=v+1)
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 2

Output:
0
1

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1

File table:

Heap:

Done

ID: 10
Execution stack: 
v=v-1

Table of symbols:
v --> 1

Output:
0
1

File table:

Heap:

Next step:

ID: 1
Execution stack: 
(fork((Print(v);v=v-1));v=v+1)
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 2

Output:
0
1

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1

File table:

Heap:

Done

ID: 10
Execution stack: 
v=v-1

Table of symbols:
v --> 1

Output:
0
1

File table:

Heap:

Next step:

ID: 1
Execution stack: 
fork((Print(v);v=v-1))
v=v+1
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 2

Output:
0
1

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1

File table:

Heap:

Done

ID: 1
Execution stack: 
fork((Print(v);v=v-1))
v=v+1
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 2

Output:
0
1

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1

File table:

Heap:

Done

ID: 1
Execution stack: 
v=v+1
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 2

Output:
0
1

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1

File table:

Heap:

Done

ID: 10
Execution stack: 
(Print(v);v=v-1)

Table of symbols:
v --> 2

Output:
0
1

File table:

Heap:

Next step:

ID: 1
Execution stack: 
v=v+1
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 2

Output:
0
1

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1

File table:

Heap:

Done

ID: 10
Execution stack: 
(Print(v);v=v-1)

Table of symbols:
v --> 2

Output:
0
1

File table:

Heap:

Next step:

ID: 1
Execution stack: 
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 3

Output:
0
1

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1

File table:

Heap:

Done

ID: 10
Execution stack: 
Print(v)
v=v-1

Table of symbols:
v --> 2

Output:
0
1

File table:

Heap:

Next step:

ID: 1
Execution stack: 
while(!(v == 3)) (fork((Print(v);v=v-1));v=v+1)
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 3

Output:
0
1

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1

File table:

Heap:

Done

ID: 10
Execution stack: 
Print(v)
v=v-1

Table of symbols:
v --> 2

Output:
0
1

File table:

Heap:

Next step:

ID: 1
Execution stack: 
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 3

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID: 10
Execution stack: 
v=v-1

Table of symbols:
v --> 2

Output:
0
1
2

File table:

Heap:

Next step:

ID: 1
Execution stack: 
(x=1;(y=2;(z=3;(w=4;Print(v*10)))))

Table of symbols:
v --> 3

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID: 10
Execution stack: 
v=v-1

Table of symbols:
v --> 2

Output:
0
1
2

File table:

Heap:

Next step:

ID: 1
Execution stack: 
x=1
(y=2;(z=3;(w=4;Print(v*10))))

Table of symbols:
v --> 3

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
x=1
(y=2;(z=3;(w=4;Print(v*10))))

Table of symbols:
v --> 3

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
(y=2;(z=3;(w=4;Print(v*10))))

Table of symbols:
v --> 3
x --> 1

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
(y=2;(z=3;(w=4;Print(v*10))))

Table of symbols:
v --> 3
x --> 1

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
y=2
(z=3;(w=4;Print(v*10)))

Table of symbols:
v --> 3
x --> 1

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
y=2
(z=3;(w=4;Print(v*10)))

Table of symbols:
v --> 3
x --> 1

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
(z=3;(w=4;Print(v*10)))

Table of symbols:
v --> 3
x --> 1
y --> 2

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
(z=3;(w=4;Print(v*10)))

Table of symbols:
v --> 3
x --> 1
y --> 2

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
z=3
(w=4;Print(v*10))

Table of symbols:
v --> 3
x --> 1
y --> 2

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
z=3
(w=4;Print(v*10))

Table of symbols:
v --> 3
x --> 1
y --> 2

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
(w=4;Print(v*10))

Table of symbols:
v --> 3
x --> 1
y --> 2
z --> 3

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
(w=4;Print(v*10))

Table of symbols:
v --> 3
x --> 1
y --> 2
z --> 3

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
w=4
Print(v*10)

Table of symbols:
v --> 3
x --> 1
y --> 2
z --> 3

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
w=4
Print(v*10)

Table of symbols:
v --> 3
x --> 1
y --> 2
z --> 3

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
Print(v*10)

Table of symbols:
v --> 3
w --> 4
x --> 1
y --> 2
z --> 3

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID: 1
Execution stack: 
Print(v*10)

Table of symbols:
v --> 3
w --> 4
x --> 1
y --> 2
z --> 3

Output:
0
1
2

File table:

Heap:

Next step:

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2

File table:

Heap:

Done

ID:1
Execution stack: 

Table of symbols:
v --> 3
w --> 4
x --> 1
y --> 2
z --> 3

Output:
0
1
2
30

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2
30

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2
30

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2
30

File table:

Heap:

Done

ID:1
Execution stack: 

Table of symbols:
v --> 3
w --> 4
x --> 1
y --> 2
z --> 3

Output:
0
1
2
30

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> -1

Output:
0
1
2
30

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 0

Output:
0
1
2
30

File table:

Heap:

Done

ID:10
Execution stack: 

Table of symbols:
v --> 1

Output:
0
1
2
30

File table:

Heap:

Done

